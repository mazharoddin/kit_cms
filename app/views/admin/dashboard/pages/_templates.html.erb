<h1>Page Design</h1>

<h3>Introduction</h3>
<p>Each content page is created using a template.  There is exactly one template for each page, but the template is not the entire page - instead the template is rendered in the context of a Layout.  For a typical website there is usually only one or two layouts, but there will be several templates.  Parts of the page which are unchanging from one page to the next belong in the layout. Most commonly the layout has the site's logo, a header, a footer and a space in the middle for the output from the page template. Templates and layouts consist of HTML and may use either HAML or ERB as a templating language to allow dynamic content.  The types of dynamic content are described below.</p>

<p>You can also see a <a href="/db/help/definitions">definition of the parts of a page</a>.</p>

<h3>Dynamic Content</h3>

<p>The power of templates come from the ability to include regions that contain dynamic content, i.e. content which is created at the time the page is created.  The system supports various types of region, some of which can be edited.  The most often used type is a "field". The other broad type is a module which provides a piece of functionality and may take some parameters. Example modules include a map, a picture gallery and a form.  Below is a description of each field and how to use it.  The examples below use HAML, but they could also be used in an ERB template or layout.</p>

<h3>Fields</h3>
<p>Fields are areas which a user can edit.  The simplest field definition is:
<pre>
  = field("field_name")
</pre>
field_name is the name of the field. It must be unique on the page and it must contain only letters, numbers and underscores.  Without specifying any other options this field will be a 'text' field - several lines long.
</p>
<p>You can specify additional options as follows:
<pre>
  = field("field_name", "type", "Title", true, "div")
</pre>
The type may be either "text" or "line", though both are treated the same in the editor.  "Title" is what the user sees as a prompt for that field - if it is not present then the field_name is used having been converted so that "field_name" becomes "Field Name".  The true/false value indicates whether this field can contain code which should be evaluated (use with care).  Lastly the type of field wrapper is specified here as "div".  It is unlikely that you would usefully use anything different.
</p>

<h3>Note</h3>
<p>Several of the following modules refere to an ID.  This ID can either be a integer number representing the ID of the module instance (which can be found by browsing to the module concerned in the Dashboard and looking at the URL in the browser) or the module instance name, as a string, e.g. "the_name".</p>

<h3>Menu Module</h3>
<p>Shows a collection of links, which can be formatted in to various menu styles using a stylesheet.</p>
<pre>
  = kit_menu(ID)
</pre>

<h3>Reusable Snippet</h3>
<p>A snippet of content - usually text but may also include formatting or other HTML.</p>
<pre>
  = kit_snippet(ID)
</pre>

<h3>Map</h3>
<p>A google map for the location specified.  Title, height and width are all optional. Specify height and width as a number of pixels; just the number, no "px".</p>
<pre>
  = kit_map("location", "Title", height, width)
</pre>
<p>Where "location" is the place on which the map should be centred.</p>

<h3>Current Year</h3>
<p>The current 4 digit year.</p>
<pre>
  = kit_current_year
</pre>

<h3>User's EMail</h3>
<p>The currently logged-in user's email address. If not logged in this will be blank.</p>
<pre>
  = kit_users_email
</pre>

<h3>View</h3>
<p>The given view (a view is typically a colleciton of content from multiple pages)</p>
<pre>
  = kit_view(ID)
</pre>

<h3>Form</h3>
<pre>
  = kit_form(ID)
</pre>

<h3>Gallery</h3>
A carousel-style image gallery.
<pre>
  = kit_gallery(ID)
</pre>

<h3>Code</h3>
<p>Evaluates the Ruby code. Use with caution.</p>
<pre>
  = kit_code("# Ruby Code")
</pre>

<h3>Search</h3>
<p>A page and forum search box.</p>
<pre>
  = kit_search
</pre>

<h3>Page Field</h3>
<p>This module allows you to retrieve a field of content from any page (not just the page on which this module appears).  The given field from the given page (page_id can be the page's ID number of the page's URL).  The true/false indicates if the field may contain a template - the default is false. </p>
<pre>
  = kit_page_field(page_id, "field_name", false)
</pre>

<h2>Blocks in Templates & Layouts</h2>

<p>For more advanced requirements you can use <a href="/db/blocks">Blocks</a>. These are pre-defined page elements which can be used in various places in various ways.  They can have parameters to allow them to display something different in each circumstance.</p>

